{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var s = 1000;\n  var m = s * 60;\n  var h = m * 60;\n  var d = h * 24;\n  var y = d * 365.25;\n\n  module.exports = function (val, options) {\n    options = options || {};\n    var type = typeof val;\n\n    if (type === 'string' && val.length > 0) {\n      return parse(val);\n    } else if (type === 'number' && isNaN(val) === false) {\n      return options.long ? fmtLong(val) : fmtShort(val);\n    }\n\n    throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n  };\n\n  function parse(str) {\n    str = String(str);\n\n    if (str.length > 100) {\n      return;\n    }\n\n    var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n    if (!match) {\n      return;\n    }\n\n    var n = parseFloat(match[1]);\n    var type = (match[2] || 'ms').toLowerCase();\n\n    switch (type) {\n      case 'years':\n      case 'year':\n      case 'yrs':\n      case 'yr':\n      case 'y':\n        return n * y;\n\n      case 'days':\n      case 'day':\n      case 'd':\n        return n * d;\n\n      case 'hours':\n      case 'hour':\n      case 'hrs':\n      case 'hr':\n      case 'h':\n        return n * h;\n\n      case 'minutes':\n      case 'minute':\n      case 'mins':\n      case 'min':\n      case 'm':\n        return n * m;\n\n      case 'seconds':\n      case 'second':\n      case 'secs':\n      case 'sec':\n      case 's':\n        return n * s;\n\n      case 'milliseconds':\n      case 'millisecond':\n      case 'msecs':\n      case 'msec':\n      case 'ms':\n        return n;\n\n      default:\n        return undefined;\n    }\n  }\n\n  function fmtShort(ms) {\n    if (ms >= d) {\n      return Math.round(ms / d) + 'd';\n    }\n\n    if (ms >= h) {\n      return Math.round(ms / h) + 'h';\n    }\n\n    if (ms >= m) {\n      return Math.round(ms / m) + 'm';\n    }\n\n    if (ms >= s) {\n      return Math.round(ms / s) + 's';\n    }\n\n    return ms + 'ms';\n  }\n\n  function fmtLong(ms) {\n    return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n  }\n\n  function plural(ms, n, name) {\n    if (ms < n) {\n      return;\n    }\n\n    if (ms < n * 1.5) {\n      return Math.floor(ms / n) + ' ' + name;\n    }\n\n    return Math.ceil(ms / n) + ' ' + name + 's';\n  }\n});","map":[[2,0,5,0],[2,6,5,4,"s"],[2,7,5,5],[2,10,5,8],[2,14,5,0],[3,0,6,0],[3,6,6,4,"m"],[3,7,6,5],[3,10,6,8,"s"],[3,11,6,9],[3,14,6,12],[3,16,6,0],[4,0,7,0],[4,6,7,4,"h"],[4,7,7,5],[4,10,7,8,"m"],[4,11,7,9],[4,14,7,12],[4,16,7,0],[5,0,8,0],[5,6,8,4,"d"],[5,7,8,5],[5,10,8,8,"h"],[5,11,8,9],[5,14,8,12],[5,16,8,0],[6,0,9,0],[6,6,9,4,"y"],[6,7,9,5],[6,10,9,8,"d"],[6,11,9,9],[6,14,9,12],[6,20,9,0],[8,0,25,0,"module"],[8,2,25,0,"module"],[8,8,25,6],[8,9,25,7,"exports"],[8,16,25,0],[8,19,25,17],[8,29,25,26,"val"],[8,32,25,17],[8,34,25,31,"options"],[8,41,25,17],[8,43,25,40],[9,0,26,2,"options"],[9,4,26,2,"options"],[9,11,26,9],[9,14,26,12,"options"],[9,21,26,19],[9,25,26,23],[9,27,26,2],[10,0,27,2],[10,8,27,6,"type"],[10,12,27,10],[10,15,27,13],[10,22,27,20,"val"],[10,25,27,2],[12,0,28,2],[12,8,28,6,"type"],[12,12,28,10],[12,17,28,15],[12,25,28,6],[12,29,28,27,"val"],[12,32,28,30],[12,33,28,31,"length"],[12,39,28,27],[12,42,28,40],[12,43,28,2],[12,45,28,43],[13,0,29,4],[13,13,29,11,"parse"],[13,18,29,16],[13,19,29,17,"val"],[13,22,29,16],[13,23,29,4],[14,0,30,3],[14,5,28,2],[14,11,30,9],[14,15,30,13,"type"],[14,19,30,17],[14,24,30,22],[14,32,30,13],[14,36,30,34,"isNaN"],[14,41,30,39],[14,42,30,40,"val"],[14,45,30,39],[14,46,30,34],[14,51,30,49],[14,56,30,9],[14,58,30,56],[15,0,31,4],[15,13,31,11,"options"],[15,20,31,18],[15,21,31,19,"long"],[15,25,31,11],[15,28,31,26,"fmtLong"],[15,35,31,33],[15,36,31,34,"val"],[15,39,31,33],[15,40,31,11],[15,43,31,41,"fmtShort"],[15,51,31,49],[15,52,31,50,"val"],[15,55,31,49],[15,56,31,4],[16,0,32,3],[18,0,33,2],[18,10,33,8],[18,14,33,12,"Error"],[18,19,33,8],[18,20,34,4],[18,78,35,6,"JSON"],[18,82,35,10],[18,83,35,11,"stringify"],[18,92,35,6],[18,93,35,21,"val"],[18,96,35,6],[18,97,33,8],[18,98,33,2],[19,0,37,1],[19,3,25,0],[21,0,47,0],[21,11,47,9,"parse"],[21,16,47,0],[21,17,47,15,"str"],[21,20,47,0],[21,22,47,20],[22,0,48,2,"str"],[22,4,48,2,"str"],[22,7,48,5],[22,10,48,8,"String"],[22,16,48,14],[22,17,48,15,"str"],[22,20,48,14],[22,21,48,2],[24,0,49,2],[24,8,49,6,"str"],[24,11,49,9],[24,12,49,10,"length"],[24,18,49,6],[24,21,49,19],[24,24,49,2],[24,26,49,24],[25,0,50,4],[26,0,51,3],[28,0,52,2],[28,8,52,6,"match"],[28,13,52,11],[28,16,52,14],[28,136,52,134,"exec"],[28,140,52,14],[28,141,53,4,"str"],[28,144,52,14],[28,145,52,2],[30,0,55,2],[30,8,55,6],[30,9,55,7,"match"],[30,14,55,2],[30,16,55,14],[31,0,56,4],[32,0,57,3],[34,0,58,2],[34,8,58,6,"n"],[34,9,58,7],[34,12,58,10,"parseFloat"],[34,22,58,20],[34,23,58,21,"match"],[34,28,58,26],[34,29,58,27],[34,30,58,26],[34,31,58,20],[34,32,58,2],[35,0,59,2],[35,8,59,6,"type"],[35,12,59,10],[35,15,59,13],[35,16,59,14,"match"],[35,21,59,19],[35,22,59,20],[35,23,59,19],[35,24,59,14],[35,28,59,26],[35,32,59,13],[35,34,59,32,"toLowerCase"],[35,45,59,13],[35,47,59,2],[37,0,60,2],[37,12,60,10,"type"],[37,16,60,2],[38,0,61,4],[38,11,61,9],[38,18,61,4],[39,0,62,4],[39,11,62,9],[39,17,62,4],[40,0,63,4],[40,11,63,9],[40,16,63,4],[41,0,64,4],[41,11,64,9],[41,15,64,4],[42,0,65,4],[42,11,65,9],[42,14,65,4],[43,0,66,6],[43,15,66,13,"n"],[43,16,66,14],[43,19,66,17,"y"],[43,20,66,6],[45,0,67,4],[45,11,67,9],[45,17,67,4],[46,0,68,4],[46,11,68,9],[46,16,68,4],[47,0,69,4],[47,11,69,9],[47,14,69,4],[48,0,70,6],[48,15,70,13,"n"],[48,16,70,14],[48,19,70,17,"d"],[48,20,70,6],[50,0,71,4],[50,11,71,9],[50,18,71,4],[51,0,72,4],[51,11,72,9],[51,17,72,4],[52,0,73,4],[52,11,73,9],[52,16,73,4],[53,0,74,4],[53,11,74,9],[53,15,74,4],[54,0,75,4],[54,11,75,9],[54,14,75,4],[55,0,76,6],[55,15,76,13,"n"],[55,16,76,14],[55,19,76,17,"h"],[55,20,76,6],[57,0,77,4],[57,11,77,9],[57,20,77,4],[58,0,78,4],[58,11,78,9],[58,19,78,4],[59,0,79,4],[59,11,79,9],[59,17,79,4],[60,0,80,4],[60,11,80,9],[60,16,80,4],[61,0,81,4],[61,11,81,9],[61,14,81,4],[62,0,82,6],[62,15,82,13,"n"],[62,16,82,14],[62,19,82,17,"m"],[62,20,82,6],[64,0,83,4],[64,11,83,9],[64,20,83,4],[65,0,84,4],[65,11,84,9],[65,19,84,4],[66,0,85,4],[66,11,85,9],[66,17,85,4],[67,0,86,4],[67,11,86,9],[67,16,86,4],[68,0,87,4],[68,11,87,9],[68,14,87,4],[69,0,88,6],[69,15,88,13,"n"],[69,16,88,14],[69,19,88,17,"s"],[69,20,88,6],[71,0,89,4],[71,11,89,9],[71,25,89,4],[72,0,90,4],[72,11,90,9],[72,24,90,4],[73,0,91,4],[73,11,91,9],[73,18,91,4],[74,0,92,4],[74,11,92,9],[74,17,92,4],[75,0,93,4],[75,11,93,9],[75,15,93,4],[76,0,94,6],[76,15,94,13,"n"],[76,16,94,6],[78,0,95,4],[79,0,96,6],[79,15,96,13,"undefined"],[79,24,96,6],[80,0,60,2],[81,0,98,1],[83,0,108,0],[83,11,108,9,"fmtShort"],[83,19,108,0],[83,20,108,18,"ms"],[83,22,108,0],[83,24,108,22],[84,0,109,2],[84,8,109,6,"ms"],[84,10,109,8],[84,14,109,12,"d"],[84,15,109,2],[84,17,109,15],[85,0,110,4],[85,13,110,11,"Math"],[85,17,110,15],[85,18,110,16,"round"],[85,23,110,11],[85,24,110,22,"ms"],[85,26,110,24],[85,29,110,27,"d"],[85,30,110,11],[85,34,110,32],[85,37,110,4],[86,0,111,3],[88,0,112,2],[88,8,112,6,"ms"],[88,10,112,8],[88,14,112,12,"h"],[88,15,112,2],[88,17,112,15],[89,0,113,4],[89,13,113,11,"Math"],[89,17,113,15],[89,18,113,16,"round"],[89,23,113,11],[89,24,113,22,"ms"],[89,26,113,24],[89,29,113,27,"h"],[89,30,113,11],[89,34,113,32],[89,37,113,4],[90,0,114,3],[92,0,115,2],[92,8,115,6,"ms"],[92,10,115,8],[92,14,115,12,"m"],[92,15,115,2],[92,17,115,15],[93,0,116,4],[93,13,116,11,"Math"],[93,17,116,15],[93,18,116,16,"round"],[93,23,116,11],[93,24,116,22,"ms"],[93,26,116,24],[93,29,116,27,"m"],[93,30,116,11],[93,34,116,32],[93,37,116,4],[94,0,117,3],[96,0,118,2],[96,8,118,6,"ms"],[96,10,118,8],[96,14,118,12,"s"],[96,15,118,2],[96,17,118,15],[97,0,119,4],[97,13,119,11,"Math"],[97,17,119,15],[97,18,119,16,"round"],[97,23,119,11],[97,24,119,22,"ms"],[97,26,119,24],[97,29,119,27,"s"],[97,30,119,11],[97,34,119,32],[97,37,119,4],[98,0,120,3],[100,0,121,2],[100,11,121,9,"ms"],[100,13,121,11],[100,16,121,14],[100,20,121,2],[101,0,122,1],[103,0,132,0],[103,11,132,9,"fmtLong"],[103,18,132,0],[103,19,132,17,"ms"],[103,21,132,0],[103,23,132,21],[104,0,133,2],[104,11,133,9,"plural"],[104,17,133,15],[104,18,133,16,"ms"],[104,20,133,15],[104,22,133,20,"d"],[104,23,133,15],[104,25,133,23],[104,30,133,15],[104,31,133,9],[104,35,134,4,"plural"],[104,41,134,10],[104,42,134,11,"ms"],[104,44,134,10],[104,46,134,15,"h"],[104,47,134,10],[104,49,134,18],[104,55,134,10],[104,56,133,9],[104,60,135,4,"plural"],[104,66,135,10],[104,67,135,11,"ms"],[104,69,135,10],[104,71,135,15,"m"],[104,72,135,10],[104,74,135,18],[104,82,135,10],[104,83,133,9],[104,87,136,4,"plural"],[104,93,136,10],[104,94,136,11,"ms"],[104,96,136,10],[104,98,136,15,"s"],[104,99,136,10],[104,101,136,18],[104,109,136,10],[104,110,133,9],[104,114,137,4,"ms"],[104,116,137,6],[104,119,137,9],[104,124,133,2],[105,0,138,1],[107,0,144,0],[107,11,144,9,"plural"],[107,17,144,0],[107,18,144,16,"ms"],[107,20,144,0],[107,22,144,20,"n"],[107,23,144,0],[107,25,144,23,"name"],[107,29,144,0],[107,31,144,29],[108,0,145,2],[108,8,145,6,"ms"],[108,10,145,8],[108,13,145,11,"n"],[108,14,145,2],[108,16,145,14],[109,0,146,4],[110,0,147,3],[112,0,148,2],[112,8,148,6,"ms"],[112,10,148,8],[112,13,148,11,"n"],[112,14,148,12],[112,17,148,15],[112,20,148,2],[112,22,148,20],[113,0,149,4],[113,13,149,11,"Math"],[113,17,149,15],[113,18,149,16,"floor"],[113,23,149,11],[113,24,149,22,"ms"],[113,26,149,24],[113,29,149,27,"n"],[113,30,149,11],[113,34,149,32],[113,37,149,11],[113,40,149,38,"name"],[113,44,149,4],[114,0,150,3],[116,0,151,2],[116,11,151,9,"Math"],[116,15,151,13],[116,16,151,14,"ceil"],[116,20,151,9],[116,21,151,19,"ms"],[116,23,151,21],[116,26,151,24,"n"],[116,27,151,9],[116,31,151,29],[116,34,151,9],[116,37,151,35,"name"],[116,41,151,9],[116,44,151,42],[116,47,151,2],[117,0,152,1]]},"type":"js/module"}]}