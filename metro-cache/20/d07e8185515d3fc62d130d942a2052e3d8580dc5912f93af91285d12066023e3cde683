{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"EmitterSubscription","data":{"isAsync":false}},{"name":"EventSubscriptionVendor","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var EmitterSubscription = _$$_REQUIRE(_dependencyMap[2], \"EmitterSubscription\");\n\n  var EventSubscriptionVendor = _$$_REQUIRE(_dependencyMap[3], \"EventSubscriptionVendor\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  var EventEmitter = function () {\n    function EventEmitter(subscriber) {\n      _classCallCheck(this, EventEmitter);\n\n      this._subscriber = subscriber || new EventSubscriptionVendor();\n    }\n\n    _createClass(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));\n      }\n    }, {\n      key: \"once\",\n      value: function once(eventType, listener, context) {\n        var _this = this;\n\n        return this.addListener(eventType, function () {\n          _this.removeCurrentListener();\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          listener.apply(context, args);\n        });\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        this._subscriber.removeAllSubscriptions(eventType);\n      }\n    }, {\n      key: \"removeCurrentListener\",\n      value: function removeCurrentListener() {\n        invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');\n        this.removeSubscription(this._currentSubscription);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');\n\n        this._subscriber.removeSubscription(subscription);\n      }\n    }, {\n      key: \"listeners\",\n      value: function listeners(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        return subscriptions ? subscriptions.map(function (subscription) {\n          return subscription.listener;\n        }) : [];\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener) {\n              this._currentSubscription = subscription;\n              subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));\n            }\n          }\n\n          this._currentSubscription = null;\n        }\n      }\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(eventType, listener) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener === listener) {\n              subscription.remove();\n            }\n          }\n        }\n      }\n    }]);\n\n    return EventEmitter;\n  }();\n\n  module.exports = EventEmitter;\n});","map":[[2,0,12,0],[8,0,14,0],[8,6,14,6,"EmitterSubscription"],[8,25,14,25],[8,28,14,28,"require"],[8,39,14,35],[8,81,14,0],[10,0,15,0],[10,6,15,6,"EventSubscriptionVendor"],[10,29,15,29],[10,32,15,32,"require"],[10,43,15,39],[10,89,15,0],[12,0,17,0],[12,6,17,6,"invariant"],[12,15,17,15],[12,18,17,18,"require"],[12,29,17,25],[12,61,17,0],[14,6,32,6,"EventEmitter"],[14,18],[15,0,42,2],[15,26,42,14,"subscriber"],[15,36,42,2],[15,38,42,52],[16,0,42,52],[18,0,43,4],[18,11,43,9,"_subscriber"],[18,22,43,4],[18,25,43,23,"subscriber"],[18,35,43,33],[18,39,43,37],[18,43,43,41,"EventSubscriptionVendor"],[18,66,43,37],[18,68,43,4],[19,0,44,3],[23,34,61,4,"eventType"],[23,43],[23,45,62,4,"listener"],[23,53],[23,55,63,4,"context"],[23,62],[23,64,64,25],[24,0,65,4],[24,15,65,12],[24,20,65,17,"_subscriber"],[24,31,65,12],[24,32,65,29,"addSubscription"],[24,47,65,12],[24,48,66,6,"eventType"],[24,57,65,12],[24,59,67,6],[24,63,67,10,"EmitterSubscription"],[24,82,67,6],[24,83,67,30],[24,87,67,6],[24,89,67,36],[24,94,67,41,"_subscriber"],[24,105,67,6],[24,107,67,54,"listener"],[24,115,67,6],[24,117,67,64,"context"],[24,124,67,6],[24,125,65,12],[24,126,65,4],[25,0,69,3],[28,27,82,4,"eventType"],[28,36],[28,38,83,4,"listener"],[28,46],[28,48,84,4,"context"],[28,55],[28,57,85,25],[29,0,85,25],[31,0,86,4],[31,15,86,11],[31,20,86,16,"addListener"],[31,31,86,11],[31,32,86,28,"eventType"],[31,41,86,11],[31,43,86,39],[31,55,86,52],[32,0,87,6],[32,10,87,6],[32,15,87,10],[32,16,87,11,"removeCurrentListener"],[32,37,87,6],[34,0,86,52],[34,44,86,43,"args"],[34,48,86,52],[35,0,86,43,"args"],[35,12,86,43,"args"],[35,16,86,52],[36,0,86,52],[38,0,88,6,"listener"],[38,10,88,6,"listener"],[38,18,88,14],[38,19,88,15,"apply"],[38,24,88,6],[38,25,88,21,"context"],[38,32,88,6],[38,34,88,30,"args"],[38,38,88,6],[39,0,89,5],[39,9,86,11],[39,10,86,4],[40,0,90,3],[43,41,99,21,"eventType"],[43,50],[43,52,99,41],[44,0,100,4],[44,13,100,9,"_subscriber"],[44,24,100,4],[44,25,100,21,"removeAllSubscriptions"],[44,47,100,4],[44,48,100,44,"eventType"],[44,57,100,4],[45,0,101,3],[48,46,124,26],[49,0,125,4,"invariant"],[49,8,125,4,"invariant"],[49,17,125,13],[49,18,126,6],[49,19,126,7],[49,20,126,8],[49,25,126,13,"_currentSubscription"],[49,45,125,13],[49,47,127,6],[49,107,125,13],[49,108,125,4],[50,0,129,4],[50,13,129,9,"removeSubscription"],[50,31,129,4],[50,32,129,28],[50,37,129,33,"_currentSubscription"],[50,57,129,4],[51,0,130,3],[54,41,136,21,"subscription"],[54,53],[54,55,136,56],[55,0,137,4,"invariant"],[55,8,137,4,"invariant"],[55,17,137,13],[55,18,138,6,"subscription"],[55,30,138,18],[55,31,138,19,"emitter"],[55,38,138,6],[55,43,138,31],[55,47,137,13],[55,49,139,6],[55,96,137,13],[55,97,137,4],[57,0,141,4],[57,13,141,9,"_subscriber"],[57,24,141,4],[57,25,141,21,"removeSubscription"],[57,43,141,4],[57,44,141,40,"subscription"],[57,56,141,4],[58,0,142,3],[61,32,151,12,"eventType"],[61,41],[61,43,151,54],[62,0,152,4],[62,12,152,10,"subscriptions"],[62,25,152,23],[62,28,152,26],[62,33,152,31,"_subscriber"],[62,44,152,26],[62,45,152,43,"getSubscriptionsForType"],[62,68,152,26],[62,69,152,67,"eventType"],[62,78,152,26],[62,79,152,4],[64,0,153,4],[64,15,153,11,"subscriptions"],[64,28,153,24],[64,31,154,8,"subscriptions"],[64,44,154,21],[64,45,154,22,"map"],[64,48,154,8],[64,49,154,26],[64,59,154,26,"subscription"],[64,71,154,38],[65,0,154,38],[65,17,154,42,"subscription"],[65,29,154,54],[65,30,154,55,"listener"],[65,38,154,38],[66,0,154,38],[66,9,154,8],[66,10,153,24],[66,13,155,8],[66,15,153,4],[67,0,156,3],[70,27,172,7,"eventType"],[70,36],[70,38,172,26],[71,0,173,4],[71,12,173,10,"subscriptions"],[71,25,173,23],[71,28,173,26],[71,33,173,31,"_subscriber"],[71,44,173,26],[71,45,173,43,"getSubscriptionsForType"],[71,68,173,26],[71,69,173,67,"eventType"],[71,78,173,26],[71,79,173,4],[73,0,174,4],[73,12,174,8,"subscriptions"],[73,25,174,4],[73,27,174,23],[74,0,175,6],[74,15,175,11],[74,19,175,15,"i"],[74,20,175,16],[74,23,175,19],[74,24,175,11],[74,26,175,22,"l"],[74,27,175,23],[74,30,175,26,"subscriptions"],[74,43,175,39],[74,44,175,40,"length"],[74,50,175,6],[74,52,175,48,"i"],[74,53,175,49],[74,56,175,52,"l"],[74,57,175,6],[74,59,175,55,"i"],[74,60,175,56],[74,62,175,6],[74,64,175,60],[75,0,176,8],[75,16,176,14,"subscription"],[75,28,176,26],[75,31,176,29,"subscriptions"],[75,44,176,42],[75,45,176,43,"i"],[75,46,176,42],[75,47,176,8],[77,0,179,8],[77,16,179,12,"subscription"],[77,28,179,24],[77,32,179,28,"subscription"],[77,44,179,40],[77,45,179,41,"listener"],[77,53,179,8],[77,55,179,51],[78,0,180,10],[78,19,180,15,"_currentSubscription"],[78,39,180,10],[78,42,180,38,"subscription"],[78,54,180,10],[79,0,181,10,"subscription"],[79,14,181,10,"subscription"],[79,26,181,22],[79,27,181,23,"listener"],[79,35,181,10],[79,36,181,32,"apply"],[79,41,181,10],[79,42,182,12,"subscription"],[79,54,182,24],[79,55,182,25,"context"],[79,62,181,10],[79,64,183,12,"Array"],[79,69,183,17],[79,70,183,18,"prototype"],[79,79,183,12],[79,80,183,28,"slice"],[79,85,183,12],[79,86,183,34,"call"],[79,90,183,12],[79,91,183,39,"arguments"],[79,100,183,12],[79,102,183,50],[79,103,183,12],[79,104,181,10],[80,0,185,9],[81,0,186,7],[83,0,187,6],[83,15,187,11,"_currentSubscription"],[83,35,187,6],[83,38,187,34],[83,42,187,6],[84,0,188,5],[85,0,189,3],[88,37,204,17,"eventType"],[88,46],[88,48,204,36,"listener"],[88,56],[88,58,204,46],[89,0,205,4],[89,12,205,10,"subscriptions"],[89,25,205,23],[89,28,205,26],[89,33,205,31,"_subscriber"],[89,44,205,26],[89,45,205,43,"getSubscriptionsForType"],[89,68,205,26],[89,69,205,67,"eventType"],[89,78,205,26],[89,79,205,4],[91,0,206,4],[91,12,206,8,"subscriptions"],[91,25,206,4],[91,27,206,23],[92,0,207,6],[92,15,207,11],[92,19,207,15,"i"],[92,20,207,16],[92,23,207,19],[92,24,207,11],[92,26,207,22,"l"],[92,27,207,23],[92,30,207,26,"subscriptions"],[92,43,207,39],[92,44,207,40,"length"],[92,50,207,6],[92,52,207,48,"i"],[92,53,207,49],[92,56,207,52,"l"],[92,57,207,6],[92,59,207,55,"i"],[92,60,207,56],[92,62,207,6],[92,64,207,60],[93,0,208,8],[93,16,208,14,"subscription"],[93,28,208,26],[93,31,208,29,"subscriptions"],[93,44,208,42],[93,45,208,43,"i"],[93,46,208,42],[93,47,208,8],[95,0,212,8],[95,16,212,12,"subscription"],[95,28,212,24],[95,32,212,28,"subscription"],[95,44,212,40],[95,45,212,41,"listener"],[95,53,212,28],[95,58,212,54,"listener"],[95,66,212,8],[95,68,212,64],[96,0,213,10,"subscription"],[96,14,213,10,"subscription"],[96,26,213,22],[96,27,213,23,"remove"],[96,33,213,10],[97,0,214,9],[98,0,215,7],[99,0,216,5],[100,0,217,3],[106,0,220,0,"module"],[106,2,220,0,"module"],[106,8,220,6],[106,9,220,7,"exports"],[106,16,220,0],[106,19,220,17,"EventEmitter"],[106,31,220,0]]},"type":"js/module"}]}