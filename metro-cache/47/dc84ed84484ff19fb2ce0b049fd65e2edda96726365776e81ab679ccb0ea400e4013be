{"dependencies":[{"name":"../parse/index.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var parse = _$$_REQUIRE(_dependencyMap[0], \"../parse/index.js\");\n\n  function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n    if (!(dirtyDatesArray instanceof Array)) {\n      throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array');\n    }\n\n    var dateToCompare = parse(dirtyDateToCompare);\n    var timeToCompare = dateToCompare.getTime();\n    var result;\n    var minDistance;\n    dirtyDatesArray.forEach(function (dirtyDate, index) {\n      var currentDate = parse(dirtyDate);\n      var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n      if (result === undefined || distance < minDistance) {\n        result = index;\n        minDistance = distance;\n      }\n    });\n    return result;\n  }\n\n  module.exports = closestIndexTo;\n});","map":[[2,0,1,0],[2,6,1,4,"parse"],[2,11,1,9],[2,14,1,12,"require"],[2,25,1,19],[2,65,1,0],[4,0,26,0],[4,11,26,9,"closestIndexTo"],[4,25,26,0],[4,26,26,25,"dirtyDateToCompare"],[4,44,26,0],[4,46,26,45,"dirtyDatesArray"],[4,61,26,0],[4,63,26,62],[5,0,27,2],[5,8,27,6],[5,10,27,8,"dirtyDatesArray"],[5,25,27,23],[5,37,27,35,"Array"],[5,42,27,6],[5,43,27,2],[5,45,27,43],[6,0,28,4],[6,12,28,10],[6,16,28,14,"TypeError"],[6,25,28,10],[6,26,28,24,"toString"],[6,34,28,32],[6,35,28,33,"call"],[6,39,28,24],[6,40,28,38,"dirtyDatesArray"],[6,55,28,24],[6,59,28,57],[6,89,28,10],[6,90,28,4],[7,0,29,3],[9,0,31,2],[9,8,31,6,"dateToCompare"],[9,21,31,19],[9,24,31,22,"parse"],[9,29,31,27],[9,30,31,28,"dirtyDateToCompare"],[9,48,31,27],[9,49,31,2],[10,0,32,2],[10,8,32,6,"timeToCompare"],[10,21,32,19],[10,24,32,22,"dateToCompare"],[10,37,32,35],[10,38,32,36,"getTime"],[10,45,32,22],[10,47,32,2],[11,0,34,2],[11,8,34,6,"result"],[11,14,34,2],[12,0,35,2],[12,8,35,6,"minDistance"],[12,19,35,2],[13,0,37,2,"dirtyDatesArray"],[13,4,37,2,"dirtyDatesArray"],[13,19,37,17],[13,20,37,18,"forEach"],[13,27,37,2],[13,28,37,26],[13,38,37,36,"dirtyDate"],[13,47,37,26],[13,49,37,47,"index"],[13,54,37,26],[13,56,37,54],[14,0,38,4],[14,10,38,8,"currentDate"],[14,21,38,19],[14,24,38,22,"parse"],[14,29,38,27],[14,30,38,28,"dirtyDate"],[14,39,38,27],[14,40,38,4],[15,0,39,4],[15,10,39,8,"distance"],[15,18,39,16],[15,21,39,19,"Math"],[15,25,39,23],[15,26,39,24,"abs"],[15,29,39,19],[15,30,39,28,"timeToCompare"],[15,43,39,41],[15,46,39,44,"currentDate"],[15,57,39,55],[15,58,39,56,"getTime"],[15,65,39,44],[15,67,39,19],[15,68,39,4],[17,0,40,4],[17,10,40,8,"result"],[17,16,40,14],[17,21,40,19,"undefined"],[17,30,40,8],[17,34,40,32,"distance"],[17,42,40,40],[17,45,40,43,"minDistance"],[17,56,40,4],[17,58,40,56],[18,0,41,6,"result"],[18,8,41,6,"result"],[18,14,41,12],[18,17,41,15,"index"],[18,22,41,6],[19,0,42,6,"minDistance"],[19,8,42,6,"minDistance"],[19,19,42,17],[19,22,42,20,"distance"],[19,30,42,6],[20,0,43,5],[21,0,44,3],[21,5,37,2],[22,0,46,2],[22,11,46,9,"result"],[22,17,46,2],[23,0,47,1],[25,0,49,0,"module"],[25,2,49,0,"module"],[25,8,49,6],[25,9,49,7,"exports"],[25,16,49,0],[25,19,49,17,"closestIndexTo"],[25,33,49,0]]},"type":"js/module"}]}