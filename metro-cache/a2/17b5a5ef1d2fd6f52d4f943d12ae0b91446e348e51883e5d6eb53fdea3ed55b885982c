{"dependencies":[{"name":"../parse/index.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var parse = _$$_REQUIRE(_dependencyMap[0], \"../parse/index.js\");\n\n  function areRangesOverlapping(dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n    var initialStartTime = parse(dirtyInitialRangeStartDate).getTime();\n    var initialEndTime = parse(dirtyInitialRangeEndDate).getTime();\n    var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime();\n    var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime();\n\n    if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n      throw new Error('The start of the range cannot be after the end of the range');\n    }\n\n    return initialStartTime < comparedEndTime && comparedStartTime < initialEndTime;\n  }\n\n  module.exports = areRangesOverlapping;\n});","map":[[2,0,1,0],[2,6,1,4,"parse"],[2,11,1,9],[2,14,1,12,"require"],[2,25,1,19],[2,65,1,0],[4,0,31,0],[4,11,31,9,"areRangesOverlapping"],[4,31,31,0],[4,32,31,31,"dirtyInitialRangeStartDate"],[4,58,31,0],[4,60,31,59,"dirtyInitialRangeEndDate"],[4,84,31,0],[4,86,31,85,"dirtyComparedRangeStartDate"],[4,113,31,0],[4,115,31,114,"dirtyComparedRangeEndDate"],[4,140,31,0],[4,142,31,141],[5,0,32,2],[5,8,32,6,"initialStartTime"],[5,24,32,22],[5,27,32,25,"parse"],[5,32,32,30],[5,33,32,31,"dirtyInitialRangeStartDate"],[5,59,32,30],[5,60,32,25],[5,61,32,59,"getTime"],[5,68,32,25],[5,70,32,2],[6,0,33,2],[6,8,33,6,"initialEndTime"],[6,22,33,20],[6,25,33,23,"parse"],[6,30,33,28],[6,31,33,29,"dirtyInitialRangeEndDate"],[6,55,33,28],[6,56,33,23],[6,57,33,55,"getTime"],[6,64,33,23],[6,66,33,2],[7,0,34,2],[7,8,34,6,"comparedStartTime"],[7,25,34,23],[7,28,34,26,"parse"],[7,33,34,31],[7,34,34,32,"dirtyComparedRangeStartDate"],[7,61,34,31],[7,62,34,26],[7,63,34,61,"getTime"],[7,70,34,26],[7,72,34,2],[8,0,35,2],[8,8,35,6,"comparedEndTime"],[8,23,35,21],[8,26,35,24,"parse"],[8,31,35,29],[8,32,35,30,"dirtyComparedRangeEndDate"],[8,57,35,29],[8,58,35,24],[8,59,35,57,"getTime"],[8,66,35,24],[8,68,35,2],[10,0,37,2],[10,8,37,6,"initialStartTime"],[10,24,37,22],[10,27,37,25,"initialEndTime"],[10,41,37,6],[10,45,37,43,"comparedStartTime"],[10,62,37,60],[10,65,37,63,"comparedEndTime"],[10,80,37,2],[10,82,37,80],[11,0,38,4],[11,12,38,10],[11,16,38,14,"Error"],[11,21,38,10],[11,22,38,20],[11,83,38,10],[11,84,38,4],[12,0,39,3],[14,0,41,2],[14,11,41,9,"initialStartTime"],[14,27,41,25],[14,30,41,28,"comparedEndTime"],[14,45,41,9],[14,49,41,47,"comparedStartTime"],[14,66,41,64],[14,69,41,67,"initialEndTime"],[14,83,41,2],[15,0,42,1],[17,0,44,0,"module"],[17,2,44,0,"module"],[17,8,44,6],[17,9,44,7,"exports"],[17,16,44,0],[17,19,44,17,"areRangesOverlapping"],[17,39,44,0]]},"type":"js/module"}]}