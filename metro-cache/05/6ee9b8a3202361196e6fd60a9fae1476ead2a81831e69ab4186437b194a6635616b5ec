{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = function (arraybuffer, start, end) {\n    var bytes = arraybuffer.byteLength;\n    start = start || 0;\n    end = end || bytes;\n\n    if (arraybuffer.slice) {\n      return arraybuffer.slice(start, end);\n    }\n\n    if (start < 0) {\n      start += bytes;\n    }\n\n    if (end < 0) {\n      end += bytes;\n    }\n\n    if (end > bytes) {\n      end = bytes;\n    }\n\n    if (start >= bytes || start >= end || bytes === 0) {\n      return new ArrayBuffer(0);\n    }\n\n    var abv = new Uint8Array(arraybuffer);\n    var result = new Uint8Array(end - start);\n\n    for (var i = start, ii = 0; i < end; i++, ii++) {\n      result[ii] = abv[i];\n    }\n\n    return result.buffer;\n  };\n});","map":[[2,0,8,0,"module"],[2,2,8,0,"module"],[2,8,8,6],[2,9,8,7,"exports"],[2,16,8,0],[2,19,8,17],[2,29,8,26,"arraybuffer"],[2,40,8,17],[2,42,8,39,"start"],[2,47,8,17],[2,49,8,46,"end"],[2,52,8,17],[2,54,8,51],[3,0,9,2],[3,8,9,6,"bytes"],[3,13,9,11],[3,16,9,14,"arraybuffer"],[3,27,9,25],[3,28,9,26,"byteLength"],[3,38,9,2],[4,0,10,2,"start"],[4,4,10,2,"start"],[4,9,10,7],[4,12,10,10,"start"],[4,17,10,15],[4,21,10,19],[4,22,10,2],[5,0,11,2,"end"],[5,4,11,2,"end"],[5,7,11,5],[5,10,11,8,"end"],[5,13,11,11],[5,17,11,15,"bytes"],[5,22,11,2],[7,0,13,2],[7,8,13,6,"arraybuffer"],[7,19,13,17],[7,20,13,18,"slice"],[7,25,13,2],[7,27,13,25],[8,0,13,27],[8,13,13,34,"arraybuffer"],[8,24,13,45],[8,25,13,46,"slice"],[8,30,13,34],[8,31,13,52,"start"],[8,36,13,34],[8,38,13,59,"end"],[8,41,13,34],[8,42,13,27],[9,0,13,66],[11,0,15,2],[11,8,15,6,"start"],[11,13,15,11],[11,16,15,14],[11,17,15,2],[11,19,15,17],[12,0,15,19,"start"],[12,6,15,19,"start"],[12,11,15,24],[12,15,15,28,"bytes"],[12,20,15,19],[13,0,15,36],[15,0,16,2],[15,8,16,6,"end"],[15,11,16,9],[15,14,16,12],[15,15,16,2],[15,17,16,15],[16,0,16,17,"end"],[16,6,16,17,"end"],[16,9,16,20],[16,13,16,24,"bytes"],[16,18,16,17],[17,0,16,32],[19,0,17,2],[19,8,17,6,"end"],[19,11,17,9],[19,14,17,12,"bytes"],[19,19,17,2],[19,21,17,19],[20,0,17,21,"end"],[20,6,17,21,"end"],[20,9,17,24],[20,12,17,27,"bytes"],[20,17,17,21],[21,0,17,35],[23,0,19,2],[23,8,19,6,"start"],[23,13,19,11],[23,17,19,15,"bytes"],[23,22,19,6],[23,26,19,24,"start"],[23,31,19,29],[23,35,19,33,"end"],[23,38,19,6],[23,42,19,40,"bytes"],[23,47,19,45],[23,52,19,50],[23,53,19,2],[23,55,19,53],[24,0,20,4],[24,13,20,11],[24,17,20,15,"ArrayBuffer"],[24,28,20,11],[24,29,20,27],[24,30,20,11],[24,31,20,4],[25,0,21,3],[27,0,23,2],[27,8,23,6,"abv"],[27,11,23,9],[27,14,23,12],[27,18,23,16,"Uint8Array"],[27,28,23,12],[27,29,23,27,"arraybuffer"],[27,40,23,12],[27,41,23,2],[28,0,24,2],[28,8,24,6,"result"],[28,14,24,12],[28,17,24,15],[28,21,24,19,"Uint8Array"],[28,31,24,15],[28,32,24,30,"end"],[28,35,24,33],[28,38,24,36,"start"],[28,43,24,15],[28,44,24,2],[30,0,25,2],[30,9,25,7],[30,13,25,11,"i"],[30,14,25,12],[30,17,25,15,"start"],[30,22,25,7],[30,24,25,22,"ii"],[30,26,25,24],[30,29,25,27],[30,30,25,2],[30,32,25,30,"i"],[30,33,25,31],[30,36,25,34,"end"],[30,39,25,2],[30,41,25,39,"i"],[30,42,25,40],[30,46,25,44,"ii"],[30,48,25,46],[30,50,25,2],[30,52,25,50],[31,0,26,4,"result"],[31,6,26,4,"result"],[31,12,26,10],[31,13,26,11,"ii"],[31,15,26,10],[31,16,26,4],[31,19,26,17,"abv"],[31,22,26,20],[31,23,26,21,"i"],[31,24,26,20],[31,25,26,4],[32,0,27,3],[34,0,28,2],[34,11,28,9,"result"],[34,17,28,15],[34,18,28,16,"buffer"],[34,24,28,2],[35,0,29,1],[35,3,8,0]]},"type":"js/module"}]}