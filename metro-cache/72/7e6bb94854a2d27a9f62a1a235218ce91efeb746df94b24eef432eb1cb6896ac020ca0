{"dependencies":[{"name":"../transport","data":{"isAsync":false}},{"name":"parseqs","data":{"isAsync":false}},{"name":"engine.io-parser","data":{"isAsync":false}},{"name":"component-inherit","data":{"isAsync":false}},{"name":"yeast","data":{"isAsync":false}},{"name":"debug","data":{"isAsync":false}},{"name":"xmlhttprequest-ssl","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Transport = _$$_REQUIRE(_dependencyMap[0], \"../transport\");\n\n  var parseqs = _$$_REQUIRE(_dependencyMap[1], \"parseqs\");\n\n  var parser = _$$_REQUIRE(_dependencyMap[2], \"engine.io-parser\");\n\n  var inherit = _$$_REQUIRE(_dependencyMap[3], \"component-inherit\");\n\n  var yeast = _$$_REQUIRE(_dependencyMap[4], \"yeast\");\n\n  var debug = _$$_REQUIRE(_dependencyMap[5], \"debug\")('engine.io-client:polling');\n\n  module.exports = Polling;\n\n  var hasXHR2 = function () {\n    var XMLHttpRequest = _$$_REQUIRE(_dependencyMap[6], \"xmlhttprequest-ssl\");\n\n    var xhr = new XMLHttpRequest({\n      xdomain: false\n    });\n    return null != xhr.responseType;\n  }();\n\n  function Polling(opts) {\n    var forceBase64 = opts && opts.forceBase64;\n\n    if (!hasXHR2 || forceBase64) {\n      this.supportsBinary = false;\n    }\n\n    Transport.call(this, opts);\n  }\n\n  inherit(Polling, Transport);\n  Polling.prototype.name = 'polling';\n\n  Polling.prototype.doOpen = function () {\n    this.poll();\n  };\n\n  Polling.prototype.pause = function (onPause) {\n    var self = this;\n    this.readyState = 'pausing';\n\n    function pause() {\n      debug('paused');\n      self.readyState = 'paused';\n      onPause();\n    }\n\n    if (this.polling || !this.writable) {\n      var total = 0;\n\n      if (this.polling) {\n        debug('we are currently polling - waiting to pause');\n        total++;\n        this.once('pollComplete', function () {\n          debug('pre-pause polling complete');\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug('we are currently writing - waiting to pause');\n        total++;\n        this.once('drain', function () {\n          debug('pre-pause writing complete');\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  };\n\n  Polling.prototype.poll = function () {\n    debug('polling');\n    this.polling = true;\n    this.doPoll();\n    this.emit('poll');\n  };\n\n  Polling.prototype.onData = function (data) {\n    var self = this;\n    debug('polling got data %s', data);\n\n    var callback = function callback(packet, index, total) {\n      if ('opening' === self.readyState) {\n        self.onOpen();\n      }\n\n      if ('close' === packet.type) {\n        self.onClose();\n        return false;\n      }\n\n      self.onPacket(packet);\n    };\n\n    parser.decodePayload(data, this.socket.binaryType, callback);\n\n    if ('closed' !== this.readyState) {\n      this.polling = false;\n      this.emit('pollComplete');\n\n      if ('open' === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  };\n\n  Polling.prototype.doClose = function () {\n    var self = this;\n\n    function close() {\n      debug('writing close packet');\n      self.write([{\n        type: 'close'\n      }]);\n    }\n\n    if ('open' === this.readyState) {\n      debug('transport open - closing');\n      close();\n    } else {\n      debug('transport not open - deferring close');\n      this.once('open', close);\n    }\n  };\n\n  Polling.prototype.write = function (packets) {\n    var self = this;\n    this.writable = false;\n\n    var callbackfn = function callbackfn() {\n      self.writable = true;\n      self.emit('drain');\n    };\n\n    parser.encodePayload(packets, this.supportsBinary, function (data) {\n      self.doWrite(data, callbackfn);\n    });\n  };\n\n  Polling.prototype.uri = function () {\n    var query = this.query || {};\n    var schema = this.secure ? 'https' : 'http';\n    var port = '';\n\n    if (false !== this.timestampRequests) {\n      query[this.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n      port = ':' + this.port;\n    }\n\n    if (query.length) {\n      query = '?' + query;\n    }\n\n    var ipv6 = this.hostname.indexOf(':') !== -1;\n    return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n  };\n});","map":[[2,0,5,0],[2,6,5,4,"Transport"],[2,15,5,13],[2,18,5,16,"require"],[2,29,5,23],[2,64,5,0],[4,0,6,0],[4,6,6,4,"parseqs"],[4,13,6,11],[4,16,6,14,"require"],[4,27,6,21],[4,57,6,0],[6,0,7,0],[6,6,7,4,"parser"],[6,12,7,10],[6,15,7,13,"require"],[6,26,7,20],[6,65,7,0],[8,0,8,0],[8,6,8,4,"inherit"],[8,13,8,11],[8,16,8,14,"require"],[8,27,8,21],[8,67,8,0],[10,0,9,0],[10,6,9,4,"yeast"],[10,11,9,9],[10,14,9,12,"require"],[10,25,9,19],[10,53,9,0],[12,0,10,0],[12,6,10,4,"debug"],[12,11,10,9],[12,14,10,12,"require"],[12,25,10,19],[12,53,10,12],[12,54,10,29],[12,80,10,12],[12,81,10,0],[14,0,16,0,"module"],[14,2,16,0,"module"],[14,8,16,6],[14,9,16,7,"exports"],[14,16,16,0],[14,19,16,17,"Polling"],[14,26,16,0],[16,0,22,0],[16,6,22,4,"hasXHR2"],[16,13,22,11],[16,16,22,15],[16,28,22,27],[17,0,23,2],[17,8,23,6,"XMLHttpRequest"],[17,22,23,20],[17,25,23,23,"require"],[17,36,23,30],[17,77,23,2],[19,0,24,2],[19,8,24,6,"xhr"],[19,11,24,9],[19,14,24,12],[19,18,24,16,"XMLHttpRequest"],[19,32,24,12],[19,33,24,31],[20,0,24,33,"xdomain"],[20,6,24,33,"xdomain"],[20,13,24,40],[20,15,24,42],[21,0,24,31],[21,5,24,12],[21,6,24,2],[22,0,25,2],[22,11,25,9],[22,19,25,17,"xhr"],[22,22,25,20],[22,23,25,21,"responseType"],[22,35,25,2],[23,0,26,1],[23,3,22,14],[23,5,22,0],[25,0,35,0],[25,11,35,9,"Polling"],[25,18,35,0],[25,19,35,18,"opts"],[25,23,35,0],[25,25,35,24],[26,0,36,2],[26,8,36,6,"forceBase64"],[26,19,36,17],[26,22,36,21,"opts"],[26,26,36,25],[26,30,36,29,"opts"],[26,34,36,33],[26,35,36,34,"forceBase64"],[26,46,36,2],[28,0,37,2],[28,8,37,6],[28,9,37,7,"hasXHR2"],[28,16,37,6],[28,20,37,18,"forceBase64"],[28,31,37,2],[28,33,37,31],[29,0,38,4],[29,11,38,9,"supportsBinary"],[29,25,38,4],[29,28,38,26],[29,33,38,4],[30,0,39,3],[32,0,40,2,"Transport"],[32,4,40,2,"Transport"],[32,13,40,11],[32,14,40,12,"call"],[32,18,40,2],[32,19,40,17],[32,23,40,2],[32,25,40,23,"opts"],[32,29,40,2],[33,0,41,1],[35,0,47,0,"inherit"],[35,2,47,0,"inherit"],[35,9,47,7],[35,10,47,8,"Polling"],[35,17,47,7],[35,19,47,17,"Transport"],[35,28,47,7],[35,29,47,0],[36,0,53,0,"Polling"],[36,2,53,0,"Polling"],[36,9,53,7],[36,10,53,8,"prototype"],[36,19,53,0],[36,20,53,18,"name"],[36,24,53,0],[36,27,53,25],[36,36,53,0],[38,0,62,0,"Polling"],[38,2,62,0,"Polling"],[38,9,62,7],[38,10,62,8,"prototype"],[38,19,62,0],[38,20,62,18,"doOpen"],[38,26,62,0],[38,29,62,27],[38,41,62,39],[39,0,63,2],[39,9,63,7,"poll"],[39,13,63,2],[40,0,64,1],[40,3,62,0],[42,0,73,0,"Polling"],[42,2,73,0,"Polling"],[42,9,73,7],[42,10,73,8,"prototype"],[42,19,73,0],[42,20,73,18,"pause"],[42,25,73,0],[42,28,73,26],[42,38,73,36,"onPause"],[42,45,73,26],[42,47,73,45],[43,0,74,2],[43,8,74,6,"self"],[43,12,74,10],[43,15,74,13],[43,19,74,2],[44,0,76,2],[44,9,76,7,"readyState"],[44,19,76,2],[44,22,76,20],[44,31,76,2],[46,0,78,2],[46,13,78,11,"pause"],[46,18,78,2],[46,21,78,20],[47,0,79,4,"debug"],[47,6,79,4,"debug"],[47,11,79,9],[47,12,79,10],[47,20,79,9],[47,21,79,4],[48,0,80,4,"self"],[48,6,80,4,"self"],[48,10,80,8],[48,11,80,9,"readyState"],[48,21,80,4],[48,24,80,22],[48,32,80,4],[49,0,81,4,"onPause"],[49,6,81,4,"onPause"],[49,13,81,11],[50,0,82,3],[52,0,84,2],[52,8,84,6],[52,13,84,11,"polling"],[52,20,84,6],[52,24,84,22],[52,25,84,23],[52,30,84,28,"writable"],[52,38,84,2],[52,40,84,38],[53,0,85,4],[53,10,85,8,"total"],[53,15,85,13],[53,18,85,16],[53,19,85,4],[55,0,87,4],[55,10,87,8],[55,15,87,13,"polling"],[55,22,87,4],[55,24,87,22],[56,0,88,6,"debug"],[56,8,88,6,"debug"],[56,13,88,11],[56,14,88,12],[56,59,88,11],[56,60,88,6],[57,0,89,6,"total"],[57,8,89,6,"total"],[57,13,89,11],[58,0,90,6],[58,13,90,11,"once"],[58,17,90,6],[58,18,90,16],[58,32,90,6],[58,34,90,32],[58,46,90,44],[59,0,91,8,"debug"],[59,10,91,8,"debug"],[59,15,91,13],[59,16,91,14],[59,44,91,13],[59,45,91,8],[60,0,92,8],[60,12,92,10,"total"],[60,17,92,8],[60,21,92,19,"pause"],[60,26,92,24],[60,28,92,8],[61,0,93,7],[61,9,90,6],[62,0,94,5],[64,0,96,4],[64,10,96,8],[64,11,96,9],[64,16,96,14,"writable"],[64,24,96,4],[64,26,96,24],[65,0,97,6,"debug"],[65,8,97,6,"debug"],[65,13,97,11],[65,14,97,12],[65,59,97,11],[65,60,97,6],[66,0,98,6,"total"],[66,8,98,6,"total"],[66,13,98,11],[67,0,99,6],[67,13,99,11,"once"],[67,17,99,6],[67,18,99,16],[67,25,99,6],[67,27,99,25],[67,39,99,37],[68,0,100,8,"debug"],[68,10,100,8,"debug"],[68,15,100,13],[68,16,100,14],[68,44,100,13],[68,45,100,8],[69,0,101,8],[69,12,101,10,"total"],[69,17,101,8],[69,21,101,19,"pause"],[69,26,101,24],[69,28,101,8],[70,0,102,7],[70,9,99,6],[71,0,103,5],[72,0,104,3],[72,5,84,2],[72,11,104,9],[73,0,105,4,"pause"],[73,6,105,4,"pause"],[73,11,105,9],[74,0,106,3],[75,0,107,1],[75,3,73,0],[77,0,115,0,"Polling"],[77,2,115,0,"Polling"],[77,9,115,7],[77,10,115,8,"prototype"],[77,19,115,0],[77,20,115,18,"poll"],[77,24,115,0],[77,27,115,25],[77,39,115,37],[78,0,116,2,"debug"],[78,4,116,2,"debug"],[78,9,116,7],[78,10,116,8],[78,19,116,7],[78,20,116,2],[79,0,117,2],[79,9,117,7,"polling"],[79,16,117,2],[79,19,117,17],[79,23,117,2],[80,0,118,2],[80,9,118,7,"doPoll"],[80,15,118,2],[81,0,119,2],[81,9,119,7,"emit"],[81,13,119,2],[81,14,119,12],[81,20,119,2],[82,0,120,1],[82,3,115,0],[84,0,128,0,"Polling"],[84,2,128,0,"Polling"],[84,9,128,7],[84,10,128,8,"prototype"],[84,19,128,0],[84,20,128,18,"onData"],[84,26,128,0],[84,29,128,27],[84,39,128,37,"data"],[84,43,128,27],[84,45,128,43],[85,0,129,2],[85,8,129,6,"self"],[85,12,129,10],[85,15,129,13],[85,19,129,2],[86,0,130,2,"debug"],[86,4,130,2,"debug"],[86,9,130,7],[86,10,130,8],[86,31,130,7],[86,33,130,31,"data"],[86,37,130,7],[86,38,130,2],[88,0,131,2],[88,8,131,6,"callback"],[88,16,131,14],[88,19,131,17],[88,28,131,6,"callback"],[88,36,131,17],[88,37,131,27,"packet"],[88,43,131,17],[88,45,131,35,"index"],[88,50,131,17],[88,52,131,42,"total"],[88,57,131,17],[88,59,131,49],[89,0,133,4],[89,10,133,8],[89,24,133,22,"self"],[89,28,133,26],[89,29,133,27,"readyState"],[89,39,133,4],[89,41,133,39],[90,0,134,6,"self"],[90,8,134,6,"self"],[90,12,134,10],[90,13,134,11,"onOpen"],[90,19,134,6],[91,0,135,5],[93,0,138,4],[93,10,138,8],[93,22,138,20,"packet"],[93,28,138,26],[93,29,138,27,"type"],[93,33,138,4],[93,35,138,33],[94,0,139,6,"self"],[94,8,139,6,"self"],[94,12,139,10],[94,13,139,11,"onClose"],[94,20,139,6],[95,0,140,6],[95,15,140,13],[95,20,140,6],[96,0,141,5],[98,0,144,4,"self"],[98,6,144,4,"self"],[98,10,144,8],[98,11,144,9,"onPacket"],[98,19,144,4],[98,20,144,18,"packet"],[98,26,144,4],[99,0,145,3],[99,5,131,2],[101,0,148,2,"parser"],[101,4,148,2,"parser"],[101,10,148,8],[101,11,148,9,"decodePayload"],[101,24,148,2],[101,25,148,23,"data"],[101,29,148,2],[101,31,148,29],[101,36,148,34,"socket"],[101,42,148,29],[101,43,148,41,"binaryType"],[101,53,148,2],[101,55,148,53,"callback"],[101,63,148,2],[103,0,151,2],[103,8,151,6],[103,21,151,19],[103,26,151,24,"readyState"],[103,36,151,2],[103,38,151,36],[104,0,153,4],[104,11,153,9,"polling"],[104,18,153,4],[104,21,153,19],[104,26,153,4],[105,0,154,4],[105,11,154,9,"emit"],[105,15,154,4],[105,16,154,14],[105,30,154,4],[107,0,156,4],[107,10,156,8],[107,21,156,19],[107,26,156,24,"readyState"],[107,36,156,4],[107,38,156,36],[108,0,157,6],[108,13,157,11,"poll"],[108,17,157,6],[109,0,158,5],[109,7,156,4],[109,13,158,11],[110,0,159,6,"debug"],[110,8,159,6,"debug"],[110,13,159,11],[110,14,159,12],[110,52,159,11],[110,54,159,52],[110,59,159,57,"readyState"],[110,69,159,11],[110,70,159,6],[111,0,160,5],[112,0,161,3],[113,0,162,1],[113,3,128,0],[115,0,170,0,"Polling"],[115,2,170,0,"Polling"],[115,9,170,7],[115,10,170,8,"prototype"],[115,19,170,0],[115,20,170,18,"doClose"],[115,27,170,0],[115,30,170,28],[115,42,170,40],[116,0,171,2],[116,8,171,6,"self"],[116,12,171,10],[116,15,171,13],[116,19,171,2],[118,0,173,2],[118,13,173,11,"close"],[118,18,173,2],[118,21,173,20],[119,0,174,4,"debug"],[119,6,174,4,"debug"],[119,11,174,9],[119,12,174,10],[119,34,174,9],[119,35,174,4],[120,0,175,4,"self"],[120,6,175,4,"self"],[120,10,175,8],[120,11,175,9,"write"],[120,16,175,4],[120,17,175,15],[120,18,175,16],[121,0,175,18,"type"],[121,8,175,18,"type"],[121,12,175,22],[121,14,175,24],[122,0,175,16],[122,7,175,15],[122,8,175,4],[123,0,176,3],[125,0,178,2],[125,8,178,6],[125,19,178,17],[125,24,178,22,"readyState"],[125,34,178,2],[125,36,178,34],[126,0,179,4,"debug"],[126,6,179,4,"debug"],[126,11,179,9],[126,12,179,10],[126,38,179,9],[126,39,179,4],[127,0,180,4,"close"],[127,6,180,4,"close"],[127,11,180,9],[128,0,181,3],[128,5,178,2],[128,11,181,9],[129,0,184,4,"debug"],[129,6,184,4,"debug"],[129,11,184,9],[129,12,184,10],[129,50,184,9],[129,51,184,4],[130,0,185,4],[130,11,185,9,"once"],[130,15,185,4],[130,16,185,14],[130,22,185,4],[130,24,185,22,"close"],[130,29,185,4],[131,0,186,3],[132,0,187,1],[132,3,170,0],[134,0,197,0,"Polling"],[134,2,197,0,"Polling"],[134,9,197,7],[134,10,197,8,"prototype"],[134,19,197,0],[134,20,197,18,"write"],[134,25,197,0],[134,28,197,26],[134,38,197,36,"packets"],[134,45,197,26],[134,47,197,45],[135,0,198,2],[135,8,198,6,"self"],[135,12,198,10],[135,15,198,13],[135,19,198,2],[136,0,199,2],[136,9,199,7,"writable"],[136,17,199,2],[136,20,199,18],[136,25,199,2],[138,0,200,2],[138,8,200,6,"callbackfn"],[138,18,200,16],[138,21,200,19],[138,30,200,6,"callbackfn"],[138,40,200,19],[138,43,200,31],[139,0,201,4,"self"],[139,6,201,4,"self"],[139,10,201,8],[139,11,201,9,"writable"],[139,19,201,4],[139,22,201,20],[139,26,201,4],[140,0,202,4,"self"],[140,6,202,4,"self"],[140,10,202,8],[140,11,202,9,"emit"],[140,15,202,4],[140,16,202,14],[140,23,202,4],[141,0,203,3],[141,5,200,2],[143,0,205,2,"parser"],[143,4,205,2,"parser"],[143,10,205,8],[143,11,205,9,"encodePayload"],[143,24,205,2],[143,25,205,23,"packets"],[143,32,205,2],[143,34,205,32],[143,39,205,37,"supportsBinary"],[143,53,205,2],[143,55,205,53],[143,65,205,63,"data"],[143,69,205,53],[143,71,205,69],[144,0,206,4,"self"],[144,6,206,4,"self"],[144,10,206,8],[144,11,206,9,"doWrite"],[144,18,206,4],[144,19,206,17,"data"],[144,23,206,4],[144,25,206,23,"callbackfn"],[144,35,206,4],[145,0,207,3],[145,5,205,2],[146,0,208,1],[146,3,197,0],[148,0,216,0,"Polling"],[148,2,216,0,"Polling"],[148,9,216,7],[148,10,216,8,"prototype"],[148,19,216,0],[148,20,216,18,"uri"],[148,23,216,0],[148,26,216,24],[148,38,216,36],[149,0,217,2],[149,8,217,6,"query"],[149,13,217,11],[149,16,217,14],[149,21,217,19,"query"],[149,26,217,14],[149,30,217,28],[149,32,217,2],[150,0,218,2],[150,8,218,6,"schema"],[150,14,218,12],[150,17,218,15],[150,22,218,20,"secure"],[150,28,218,15],[150,31,218,29],[150,38,218,15],[150,41,218,39],[150,47,218,2],[151,0,219,2],[151,8,219,6,"port"],[151,12,219,10],[151,15,219,13],[151,17,219,2],[153,0,222,2],[153,8,222,6],[153,18,222,16],[153,23,222,21,"timestampRequests"],[153,40,222,2],[153,42,222,40],[154,0,223,4,"query"],[154,6,223,4,"query"],[154,11,223,9],[154,12,223,10],[154,17,223,15,"timestampParam"],[154,31,223,9],[154,32,223,4],[154,35,223,33,"yeast"],[154,40,223,38],[154,42,223,4],[155,0,224,3],[157,0,226,2],[157,8,226,6],[157,9,226,7],[157,14,226,12,"supportsBinary"],[157,28,226,6],[157,32,226,30],[157,33,226,31,"query"],[157,38,226,36],[157,39,226,37,"sid"],[157,42,226,2],[157,44,226,42],[158,0,227,4,"query"],[158,6,227,4,"query"],[158,11,227,9],[158,12,227,10,"b64"],[158,15,227,4],[158,18,227,16],[158,19,227,4],[159,0,228,3],[161,0,230,2,"query"],[161,4,230,2,"query"],[161,9,230,7],[161,12,230,10,"parseqs"],[161,19,230,17],[161,20,230,18,"encode"],[161,26,230,10],[161,27,230,25,"query"],[161,32,230,10],[161,33,230,2],[163,0,233,2],[163,8,233,6],[163,13,233,11,"port"],[163,17,233,6],[163,22,233,21],[163,34,233,33,"schema"],[163,40,233,21],[163,44,233,43,"Number"],[163,50,233,49],[163,51,233,50],[163,56,233,55,"port"],[163,60,233,49],[163,61,233,43],[163,66,233,65],[163,69,233,20],[163,73,234,6],[163,84,234,17,"schema"],[163,90,234,6],[163,94,234,27,"Number"],[163,100,234,33],[163,101,234,34],[163,106,234,39,"port"],[163,110,234,33],[163,111,234,27],[163,116,234,49],[163,118,233,6],[163,119,233,2],[163,121,234,55],[164,0,235,4,"port"],[164,6,235,4,"port"],[164,10,235,8],[164,13,235,11],[164,19,235,17],[164,24,235,22,"port"],[164,28,235,4],[165,0,236,3],[167,0,239,2],[167,8,239,6,"query"],[167,13,239,11],[167,14,239,12,"length"],[167,20,239,2],[167,22,239,20],[168,0,240,4,"query"],[168,6,240,4,"query"],[168,11,240,9],[168,14,240,12],[168,20,240,18,"query"],[168,25,240,4],[169,0,241,3],[171,0,243,2],[171,8,243,6,"ipv6"],[171,12,243,10],[171,15,243,13],[171,20,243,18,"hostname"],[171,28,243,13],[171,29,243,27,"indexOf"],[171,36,243,13],[171,37,243,35],[171,40,243,13],[171,46,243,44],[171,47,243,45],[171,48,243,2],[172,0,244,2],[172,11,244,9,"schema"],[172,17,244,15],[172,20,244,18],[172,25,244,9],[172,29,244,27,"ipv6"],[172,33,244,31],[172,36,244,34],[172,42,244,40],[172,47,244,45,"hostname"],[172,55,244,34],[172,58,244,56],[172,61,244,31],[172,64,244,62],[172,69,244,67,"hostname"],[172,77,244,9],[172,81,244,79,"port"],[172,85,244,9],[172,88,244,86],[172,93,244,91,"path"],[172,97,244,9],[172,100,244,98,"query"],[172,105,244,2],[173,0,245,1],[173,3,216,0]]},"type":"js/module"}]}